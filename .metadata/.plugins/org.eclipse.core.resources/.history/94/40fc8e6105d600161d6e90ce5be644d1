package view.ihm;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.util.ArrayList;

import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;

import model.game.De;
import model.game.GameManager;
import model.player.Bot;
import model.player.Player;
import model.strategy.MediumStrategy;

public class PanelTableJeu extends JPanel {
	
	
	public PanelTableJeu(final GameManager gameManager, De de){
		this.setLayout(new BorderLayout());
		
		JPanel panelGauche = new JPanel();
		panelGauche.setLayout(new BoxLayout(panelGauche, BoxLayout.Y_AXIS));
		
//		JPanel panelDroite = new JPanel()
		
		
		//Definition du panel des joueurs
		final JPanel panelJoueurs = new JPanel();
		panelJoueurs.setLayout(new BoxLayout(panelJoueurs, BoxLayout.Y_AXIS));
		panelJoueurs.setPreferredSize(new Dimension(800,400));
		
		JPanel panelLabelJoueurJeu = new JPanel();
		JLabel labelJoueurEnJeu = new JLabel("liste des joueurs en jeu:");
		panelLabelJoueurJeu.add(labelJoueurEnJeu);
//		final ArrayList<Player> liste = new ArrayList<Player>();
//		liste.add(new Bot("lala", new MediumStrategy()));
//		liste.add(new Bot("lala", new MediumStrategy()));
		
		panelJoueurs.add(panelLabelJoueurJeu);
		SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
            	panelJoueurs.add(new ScrollerPlayer(gameManager.getPlayers()));
//            	frame.pack();
            }
        });	
		
		
		
		final JPanel panelPileAppelCarte = new JPanel();
		panelPileAppelCarte.setLayout(new BoxLayout(panelPileAppelCarte, BoxLayout.Y_AXIS));
		
		JPanel panelLabelPileCarte = new JPanel();
		JLabel labelPileCarte = new JLabel("liste des cartes lancees par les joueurs:");
		panelLabelPileCarte.add(labelPileCarte);
		
		
		
//		ArrayList<EnumDogme> dogmes = new ArrayList<EnumDogme>();
//		dogmes.add(EnumDogme.CHAOS);
//		dogmes.add(EnumDogme.NATURE);
//		String description = "description de la divinite";
//		EnumOrigineDivinite origine = EnumOrigineDivinite.JOUR;
//		Divinity carte = new Divinity("nom divinite", dogmes, description, origine);
//		
//		final ArrayList<Card> listeCard = new ArrayList<Card>();
		
//		listeCard.add(carte);
		
		
		labelPileCarte.setHorizontalAlignment(SwingConstants.LEFT);
		labelPileCarte.setHorizontalAlignment(SwingConstants.LEFT);
		panelPileAppelCarte.add(panelLabelPileCarte);
		SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
            	panelPileAppelCarte.add(new ScrollerCard(gameManager.getPilesCartesTour()));
            	panelPileAppelCarte.add(new ScrollerCard(listeCard));
//            	frame.pack();
            }
        });
		
		
		
		
		
		//définition de l'espace réservé au dé
		final JPanel panelDeTour = new JPanel();
		panelDeTour.setLayout(new BoxLayout(panelDeTour, BoxLayout.Y_AXIS));
		
		JPanel panelLabelDe = new JPanel();
		JLabel labelDe = new JLabel("face du des:");
		panelLabelDe.add(labelDe);
		
		panelJoueurs.add(panelLabelJoueurJeu);
		panelDeTour.add(panelLabelDe);
		
//		switch(de.getFace());
		// mettre une image non définie lorseque le dé est affiché pour la premiere fois
		ImagePanel panelImageDe = new ImagePanel("./images/OrigineCarte/jour.jpg",800/20,800/20);
		panelDeTour.add(new JLabel(new ImageIcon(panelImageDe.getBufferedImage().getScaledInstance(800/20,800/20, Image.SCALE_SMOOTH))));
		
		panelImageDe.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		
		this.add(panelJoueurs, BorderLayout.WEST);
		this.add(panelDeTour, BorderLayout.EAST);
	}
	
}
